Как настроить программы для тестов:
Зайти на кодомо по ssh.
Все последующие действия нужно делать в том же терминале.
Зайти в пустую папку.
$ hg clone http://kodomo.fbb.msu.ru/hg/allpy
$ cd allpy
$ make
$ export PYTHONPATH=
$ . SETPATH

Файлы set1.fasta, set2.fasta и set3.fasta были получены из выравниваний
соответствующих семейств pfam. Ниже приведены соответствующие семейства pfam
и укладки, согласно SCOP.

pfam_PF01270.10_Glyco_hydro_8.markup
set1.fasta
http://scop.mrc-lmb.cam.ac.uk/scop/data/scop.b.b.cac.b.c.A.html

pfam_PF02315.9_MDH.markup
set2.fasta
http://scop.mrc-lmb.cam.ac.uk/scop/data/scop.b.b.cid.c.b.A.html

pfam_PF01276.13_OKR_DC_1.markup
set3.fasta
http://scop.mrc-lmb.cam.ac.uk/scop/data/scop.b.d.ch.b.e.A.html

Файлы set1.fasta, set2.fasta и set3.fasta поместить в текущую папку.

Запустим pair-cores:

$ for i in {1..3}; do ./pair_cores/pair_cores.py \
    -i set$i.fasta -y set$i.homology -p set$i.pml; done

Будут получены файлы set1.plm, set2.plm и set3.plm.

По очереди открыть файлы set1.pml, set2.pml и set3.pml программой PyMol.
Все остатки, присутствующие в исходном выравнивании, показаны в частично
прозрачной проволочной модели (оставлены только C, N и CA-атомы).
Остатки, попавшие в плюс-блоки, показаны в полностью непрозрачной
ленточной модели (неструктурированные участки выглядят как шнуры).

Для каждого файла просмотреть плюс-блоки, обращая внимание на
сходство конформаций цепей, входящих и не входящих в
плюс-блоки.
Программа «pair_cores» считается выдержавшей испытание на
чувствительность, если все участки белковых цепей, визуально
совпадающие в пространстве, оказались помечены как
плюс-блоки.

-------

Чтобы выполнить вышеописанные тесты в автоматическом режиме, запустите скрипт:
$ ./test-pymol.sh

